# @configure_input@

#
#  Makefile.in
#
#  Copyright Â© 2020 by Blockchain Commons, LLC
#  Licensed under the "BSD-2-Clause Plus Patent License"
#

# Package-specific substitution variables
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@
tarname = @PACKAGE_TARNAME@

# Prefix-specific substitution variables
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@

# VPATH-specific substitution variables
srcdir = @srcdir@
VPATH = @srcdir@

# Terminal colors
RED=`tput setaf 1`
GREEN=`tput setaf 2`
RESET=`tput sgr0`

COMPILER = g++
CFLAGS += --debug -O0
CXXFLAGS += -std=c++17 -stdlib=libc++ --debug -O0

toolname = keytool

.PHONY: all
all: $(toolname)

OBJS = \
	keytool.o \
	utils.o \
	params.o \
	wally-utils.o \
	randombytes.o \
	network.o \
	asset.o \
	model.o \
	hd-key.o \
	derivation-path.o \
	chain-type.o \
	ec-key.o

LDLIBS += -lwallycore -lsecp256k1 -largp

UNAME := $(shell uname)
ifeq ($(UNAME), Linux)
    LDLIBS += -lm -lc++ -lc++abi -lgcc_s -lgcc
else ifeq ($(findstring MINGW64, $(UNAME)), MINGW64)
    # on windows building with msys2/mingw64
    LDLIBS += -lm -lc++ -lws2_32 -lssp
else
    LDLIBS += -lstdc++
endif

$(toolname): $(OBJS)

keytool.o: params.hpp
utils.o: utils.hpp randombytes.h
params.o: params.hpp utils.hpp config.h model.hpp
wally-utils.o: wally-utils.hpp utils.hpp asset.hpp data-node.hpp model.hpp hd-key.hpp derivation-path.hpp ec-key.hpp
randombytes.o: randombytes.h
network.o: network.hpp
asset.o: asset.hpp network.hpp
model.o: model.hpp data-node.hpp asset.hpp hd-key.hpp ec-key.hpp utils.hpp wally-utils.hpp derivation-path.hpp chain-type.hpp
hd-key.o: hd-key.hpp utils.hpp network.hpp wally-utils.hpp derivation-path.hpp
derivation-path.o: derivation-path.hpp utils.hpp
chain-type.o: chain-type.hpp
ec-key.o: ec-key.hpp utils.hpp wally-utils.hpp

bindir = $(DESTDIR)/$(prefix)/bin

.PHONY: install
install: $(toolname)
	install -d $(bindir)
	install $(toolname) $(bindir)

.PHONY: uninstall
uninstall:
	rm -f $(bindir)/$(toolname)
	-rmdir $(bindir) >/dev/null 2>&1

.PHONY: check
check: $(toolname)
	./test.sh ./$(toolname)

.PHONY: clean
clean:
	rm -f $(toolname) *.o
	rm -rf *.dSYM

.PHONY: distclean
distclean: clean
	rm -f Makefile
	rm -f config.h
